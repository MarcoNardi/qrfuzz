#!/bin/bash
set -e
cd "$(realpath "$(dirname "$BASH_SOURCE")")/.."

apk_directory=test/apks

log () {
    echo "[[1;34m$0[0m] $@"
}
warning () {
    log "[[1;33mWARNING[0m] $@" >&2
}
error () {
    log "[[1;31mERROR[0m] $@" >&2
    exit 1
}
ok () {
    log "[[1;32mOK[0m] $@"
}

print_help () {
    cat >&2 <<-EOF
	usage: apk-install [-h] APP [...]
	Download and install the required APP[s]

	arguments:
      APP [...]     the app (or multiple apps) to install
	options:
	  -h, --help    show this message
	EOF
}

[[ -n "$1" ]] || {
    print_help
    exit 1
}

case "$1" in
    -h | --help)
        print_help
        exit 0
        ;;
    *)  apps="$@" ;;
esac

# Check that the Android SDK is installed
[[ -n "$ANDROID_HOME" ]] ||
    export ANDROID_HOME="$HOME/Android/Sdk"
which adb &> /dev/null ||
    export PATH="$ANDROID_HOME/platform-tools:$PATH"
which adb &> /dev/null || {
    cat >&2 <<- EOF
	Android SDK not found
	It is expected to be in \$ANDROID_HOME: ${ANDROID_HOME/$HOME/\~}
	EOF
    read -p 'Do you want to install it? (Y/n) ' answer >&2
    if [[ "$answer" != [Nn] ]]; then
        setup/android-sdk
    else
        exit 1
    fi
}

# Check that an emulator is running
[[ -f /tmp/emulator.pid ]] && ps -p $(< /tmp/emulator.pid) &> /dev/null || {
    log Starting Android emulator
    util/launch-emulator
    emulator_pid=$(< /tmp/emulator.pid)

    # Kill the emulator on exit, because it has no webcam set
    # it is not fit to perform fuzzing
    trap 'kill $emulator_pid &> /dev/null' EXIT INT TERM
}

# Wait for the emulator to be ready
adb wait-for-device

! adb devices | grep unauthorized || {
    # Kill adb server, or it will keep listing emulators as unauthorized
    adb kill-server
    error The emulator is unauthorized, try reinstalling it
}

log Waiting for Android package manager to be ready
until adb shell pm list packages &> /dev/null; do
    sleep 1
done

[[ -d "$apk_directory" ]] ||
    mkdir -p "$apk_directory"

for app in $apps; do
    # First character is uppercase
    app_name=$(sed 's/.*/\u&/' <<< $app)
    file="$apk_directory/$app.apk"

    case $app in
        discord)
            package=com.discord
            link='https://dw29.uptodown.com/dwn/4v1DOXXxUtLz5E0FU9H39urRNzcdTplHuhm-C8NGsH4Xmg_imYVkY9SQdUPTLs9avOGP35RQWPTU-1vU8h8TKRSjeN-XHNX1apL0V6muTZ2zR55C5sz_Cee4ga9lRRHn/Cd9W8C_boVFnOF_VGIF2RgCS4JPqJrcCjALkN0Gy1dv71Dadvu1D-EMfV8DMZ8fx0xdoH4xlO0E_uugolv8dNtMNbEoE_lT3tA5phItm_JiU6szGb9x0e2S7EL7U73Ek/n8grr4pyo_-x1zTyLtGDqji6HiLQj00vgA4qorapm91Jer9fVbpp77WK_5V5yaxtDP8JJ-3fcdXb6NmXPfqyxp6wlQI7mpaMJ3KOkjZCcro=/discord-126-17-stable.apk'
            ;;
        postepay)
            package=posteitaliane.posteapp.apppostepay
            link='https://downloadr2.apkmirror.com/wp-content/uploads/2024/02/10/65bcad2745464/posteitaliane.posteapp.apppostepay_11.398.104-110398104_minAPI21(arm64-v8a,armeabi,armeabi-v7a,mips,mips64,x86,x86_64)(nodpi)_apkmirror.com.apk?verify=1707314335-s7dGTuWz4MysyJrWcepITQU59O4YVw8tqdl3qls0X8c'
            ;;
        *)  warning \`$app_name\` is not configured yet
            # Skip installation
            continue
            ;;
    esac

    ! adb shell pm list packages | grep -q $package || {
        ok $app_name is installed
        continue
    }

    # Check if file is already downloaded
    if [[ ! -f "$file" ]]; then
        log Downloading $app_name
        curl -L "$link" -o "$file"
        ok $app_name downloaded in $file
    else
        ok $app_name already downloaded in $file
    fi

    log Installing $app_name
    until adb install "$file" &> /dev/null; do
        # Check that the downloaded APK is not corrupted
        # It could be caused by an incomplete download or broken url
        ! adb install "$file" 2>&1 | grep -q INSTALL_PARSE_FAILED_NOT_APK || {
            rm "$file"
            error File \`$file\` is corrupted, try again
        }
        sleep 1
    done
    ok $app_name installed
done
