#!/bin/bash
set -e
cd "../$(realpath "$(dirname "$BASH_SOURCE")")"

qr=test/qr.png
qr_app_package=com.example.barcodescanner

# Repeatedly try to execute a command
# usage: try COMMAND [COMMAND PARAMS ...]
try () {
    [[ -n "$1" ]] || {
        echo try function: bad usage >&2
        return 1
    }
    echo trying \`$*\` >&2
    tries=1
    until "$@" &> /dev/null; do
        let tries++
        echo tries: $tries $(tput cuu1) >&2
        sleep 1
    done
}

# Automatically kill ffmpeg and the emulator on exit
trap 'kill $ffmpeg_pid $emulator_pid &> /dev/null' EXIT INT TERM

# Start video stream
device=$(bin/stream "$qr")
ffmpeg_pid=$(cat /tmp/stream.pid)

# Wait for ffmpeg to start the stream
sleep 1

# Start emulator
bin/launch-emulator
emulator_pid=$(cat /tmp/emulator.pid)

# Download the QR scanner app
[[ -f $qr_app_package.apk ]] ||
    curl 'https://f-droid.org/repo/com.example.barcodescanner_13.apk' -o $qr_app_package.apk

echo Waiting for the emulator to start
adb wait-for-device

# Install the app
if try adb shell pm list packages | grep -q $qr_app_package; then
    try adb uninstall $qr_app_package
fi
try adb install $qr_app_package.apk
# Automatically grant permission
try adb shell pm grant $qr_app_package android.permission.CAMERA
# Launch the app
try adb shell "am start -n $qr_app_package/$qr_app_package.feature.tabs.BottomTabsActivity && \
    dumpsys activity activities | grep mFocusedWindow.*$qr_app_package"
echo Scanning the QR

# Keep logcat running
adb logcat &> /tmp/logcat.log
