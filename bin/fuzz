#!/bin/bash
set -e
cd "$(realpath "$(dirname "$BASH_SOURCE")")/.."

log () {
    echo "[[1;34m$0[0m] $@"
}

print_help () {
    cat >&2 <<- EOF
	usage: fuzz APP
	Run fuzzing tests for APP

	arguments:
	  APP           the app to test
	options:
	  -h, --help    show this message
	EOF
}

initial_qr=test/qr-examples/qr1.png

[[ -n "$1" ]] || {
    print_help
    exit 1
}

case "$1" in
    -h | --help)
        print_help
        exit 0
        ;;
    *)  app="$1" ;;
esac

[[ -n "$ANDROID_HOME" ]] ||
    export ANDROID_HOME="$HOME/Android/Sdk"
which adb &> /dev/null ||
    export PATH="$ANDROID_HOME/platform-tools:$PATH"

which adb &> /dev/null || {
    cat >&2 <<- EOF
	Android SDK not found
	It is expected to be in \$ANDROID_HOME: ${ANDROID_HOME/$HOME/\~}
	EOF
    read -p 'Do you want to install it? (Y/n) ' answer >&2
    if [[ "$answer" != [Nn] ]]; then
        setup/android-sdk
    else
        exit 1
    fi
}

# Automatically kill the background services on exit
trap 'kill $stream_pid $appium_pid &> /dev/null' EXIT INT TERM

# Start video stream
bin/stream "$initial_qr"
device=$(< /tmp/stream.device)
stream_pid=$(< /tmp/stream.pid)

# Wait for ffmpeg to start the stream
sleep 1

# Start emulator
bin/launch-emulator $device
emulator_pid=$(< /tmp/emulator.pid)

log Waiting for the emulator to start
adb wait-for-device

appium &> /tmp/appium.log \
    --base-path /wd/hub \
    -p 4723 \
    &
appium_pid=$!

# Wait for appium to start
sleep 2

emulator="$( \
    adb devices |
    grep emulator |
    sed 's/\(emulator-[0-9]*\).*/\1/'
)"

cd QRFuzz/tools/QRCodeFuzzer

[[ -d "data-tests/$app" ]] ||
    mkdir -p "data-tests/$app"
[[ -f "data-test/$app/fuzzer.json" ]] ||
    cat data-tests/app-example/fuzzer.json > "data-tests/$app/fuzzer.json"

node index.js "$app" "data-tests/$app" 4723 "$emulator"
