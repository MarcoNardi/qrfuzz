#/bin/bash
set -e
cd "$(dirname "$BASH_SOURCE")"

qr=qr.png
qr_app_package=com.example.barcodescanner

[[ -n "$ANDROID_HOME" ]] ||
    export ANDROID_HOME="$HOME/Android/Sdk"
which emulator adb &> /dev/null ||
    export PATH="$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$PATH"

which emulator adb &> /dev/null || {
    cat >&2 <<- EOF
	Android SDK not found
	It is expected to be in \$ANDROID_HOME: ${ANDROID_HOME/$HOME/\~}
	EOF
    exit 1
}

# Repeatedly try to execute a command
# usage: try COMMAND [WITH PARAMS]
try () {
    [[ -n "$1" ]] || {
        echo try function: bad usage >&2
        return 1
    }
    echo trying \`$*\` >&2
    tries=1
    until "$@" &> /dev/null; do
        let tries++
        echo tries: $tries $(tput cuu1) >&2
        sleep 1
    done
}

# Automatically kill ffmpeg and the emulator on exit
trap 'kill $ffmpeg_pid $emulator_pid &> /dev/null' EXIT INT TERM

device=$(./stream "$qr")
ffmpeg_pid=$(cat /tmp/stream.pid)
# Wait for ffmpeg to start the stream
sleep 1
# Get webcam name from emulator
webcam=$(emulator -webcam-list | grep $device | grep -o 'webcam[0-9]*') || {
    echo Android emulator is unable to find the virtual webcam >&2
    exit 1
}

# Launch the emulator
emulator &> /tmp/emulator.log \
    -avd qrfuzz \
    -camera-back $webcam \
    &
emulator_pid=$!

# Download the QR scanner app
[[ -f $qr_app_package.apk ]] ||
    curl 'https://f-droid.org/repo/com.example.barcodescanner_13.apk' -o $qr_app_package.apk

echo Waiting for the emulator to start... >&2
adb wait-for-device

# Install the app
if try adb shell pm list packages | grep -q $qr_app_package; then
    try adb uninstall $qr_app_package
fi
try adb install $qr_app_package.apk
# Automatically grant permission
try adb shell pm grant $qr_app_package android.permission.CAMERA
# Launch the app
try adb shell "am start -n $qr_app_package/$qr_app_package.feature.tabs.BottomTabsActivity && \
    dumpsys activity activities | grep mFocusedWindow.*$qr_app_package"
echo 'done     '

# Keep logcat running
adb logcat &> /tmp/logcat.log
