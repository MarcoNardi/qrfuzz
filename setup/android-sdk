#!/bin/bash
set -e

# Name of the emulated Android device
device=qrfuzz

case "$(uname -m)" in
    aarch64 | arm64)
        arch=arm64-v8a ;;
    x86_64)
        arch=x86_64 ;;
    *)  echo $0: CPU architecture not supported >&2
        exit 1
        ;;
esac

system_image="system-images;android-34;google_apis_playstore;$arch"

case "$(uname)" in
    Linux)
        os=linux
        [[ -n "$ANDROID_HOME" ]] || {
            export ANDROID_HOME=~/Android/Sdk
            echo $0: environment variable ANDROID_HOME is not set >&2
            read -p 'Do you want to add it to your ~/.bash_profile? (Y/n) ' answer >&2 
            if [[ "$answer" != [Nn] ]]; then
                echo 'export ANDROID_HOME="$HOME/Android/Sdk"' >> ~/.bash_profile
            else
                cat >&2 <<-EOF
				You will need to manually set it, by writing the following line in your ~/.bash_profile
				export ANDROID_HOME="\$HOME/Android/Sdk"

				EOF
            fi
        }
        ;;
    *)  echo $0: OS not supported >&2
        exit 1
        ;;
esac

# Get from curl
if [[ ! -d "$ANDROID_HOME/cmdline-tools" ]]; then
    link="https://dl.google.com/android/repository/commandlinetools-$os-10406996_latest.zip"
    out=/tmp/commandlinetools-$os-10406996_latest.zip

    echo $0: downloading Android SDK from $link
    [[ -f "$out" ]] ||
        curl -Lo "$out" "$link"

    [[ -d "$ANDROID_HOME/cmdline-tools" ]] ||
        mkdir -p "$ANDROID_HOME/cmdline-tools"

    echo $0: extracting downloaded package
    unzip -q "$out" -d "$ANDROID_HOME/cmdline-tools" &&
        rm "$out"
    mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"
fi

which sdkmanager &> /dev/null ||
    export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH"

# Check that the installed java version is sufficiently high
! sdkmanager --version 2>&1 | grep -q 'java\.lang\.UnsupportedClassVersionError' || {
    cat >&2 <<- EOF
	You need to install a more recent version of your Java Runtime

	This is your current Java version (\`java --version\` command output):
	$(java --version)
	EOF
    exit 1
}

# Accept licenses
yes | sdkmanager --install \
    'platform-tools' \
    'platforms;android-34' \
    'build-tools;34.0.0' \
    "$system_image"

echo $0: creating virtual device \`$device\`
echo no | avdmanager create avd > /dev/null \
    --force \
    -n $device \
    -k $system_image

# Enable emulator buttons
sed -i'' 's/^hw\.keyboard=no/hw.keyboard=yes/' ~/.android/avd/$device.avd/config.ini
