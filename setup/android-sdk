#!/bin/bash
set -e

log () {
    echo "[[1;34m$0[0m] $@"
}

error () {
    log "[[1;31mERROR[0m] $@" >&2
    exit 1
}

# Name of the emulated Android device
device=qrfuzz

case "$(uname -m)" in
    aarch64 | arm64)
        arch=arm64-v8a ;;
    x86_64)
        arch=x86_64 ;;
    *)  error CPU architecture not supported ;;
esac

system_image="system-images;android-34;google_apis_playstore;$arch"

case "$(uname)" in
    Linux)
        os=linux
        [[ -n "$ANDROID_HOME" ]] || {
            export ANDROID_HOME=~/Android/Sdk
            log Environment variable ANDROID_HOME is not set >&2
            read -p 'Do you want to add it to your ~/.bash_profile? (Y/n) ' answer >&2 
            if [[ "$answer" != [Nn] ]]; then
                echo 'export ANDROID_HOME="$HOME/Android/Sdk"' >> ~/.bash_profile
            else
                cat >&2 <<-EOF
				You will need to manually set it, by writing the following line in your ~/.bash_profile
				export ANDROID_HOME="\$HOME/Android/Sdk"

				EOF
            fi

            cat >&2 <<- EOF
			[!!] You might need to type \`source ~/.bash_profile\`
			or log out and start a new session

			EOF
        }
        ;;
    *)  error OS not supported ;;
esac

# Get from curl
[[ -d "$ANDROID_HOME/cmdline-tools" ]] || {
    link="https://dl.google.com/android/repository/commandlinetools-$os-10406996_latest.zip"
    out=/tmp/commandlinetools-$os-10406996_latest.zip

    log Downloading Android SDK from $link
    [[ -f "$out" ]] ||
        curl -Lo "$out" "$link"

    [[ -d "$ANDROID_HOME/cmdline-tools" ]] ||
        mkdir -p "$ANDROID_HOME/cmdline-tools"

    log Extracting $out
    unzip -q "$out" -d "$ANDROID_HOME/cmdline-tools"
    mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"
}

which sdkmanager &> /dev/null ||
    export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"

# Check that Java Runtime is installed and is the correct version (>= 17)
sdkmanager --version &> /dev/null || {
    log Installing dependency: Java Runtime

    # Debian-based
    if which apt &> /dev/null; then
        log 'Running: sudo apt update && sudo apt install openjdk-17-jdk openjdk-17-jre'
        sudo apt update
        sudo apt install openjdk-17-jdk openjdk-17-jre
    # Arch-based
    elif which pacman &> /dev/null; then
        log 'Running: sudo pacman -S jdk-openjdk'
        sudo pacman -S jdk-openjdk
    # RHEL-based
    elif which dnf &> /dev/null; then
        log 'Running: sudo dnf install java-17-openjdk'
        sudo dnf install java-17-openjdk
    else
        error No supported package manager was found
    fi
}

# Accept licenses
yes | sdkmanager --install \
    'platform-tools' \
    'platforms;android-34' \
    'build-tools;34.0.0' \
    "$system_image"

# Create virtual device, if not present
avdmanager list avd | grep -q "$device" || {
    log Creating virtual device \`$device\`
    echo no | avdmanager create avd > /dev/null \
        --force \
        -n "$device" \
        -k $system_image

    # Enable emulator buttons
    sed -i'' 's/^hw\.keyboard=no/hw.keyboard=yes/' ~/.android/avd/$device.avd/config.ini
}
